#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å—É –∑ Binance
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.services.binance_api import BinanceAPI

def test_balance():
    print("üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –±–∞–ª–∞–Ω—Å—É...")
    
    try:
        api = BinanceAPI()
        balance = api.get_account_balance()
        
        if balance:
            print(f"‚úÖ –£—Å–ø—ñ—à–Ω–æ –æ—Ç—Ä–∏–º–∞–Ω–æ –±–∞–ª–∞–Ω—Å!")
            print(f"üìä –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∞–∫—Ç–∏–≤—ñ–≤: {len(balance.get('balances', []))}")
            print(f"üí∞ –ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å: ${balance.get('total_portfolio_value', 0):.2f}")
            print(f"üè¶ –¢–∏–ø –∞–∫–∞—É–Ω—Ç—É: {balance.get('account_type', '–ù–µ–≤—ñ–¥–æ–º–æ')}")
            
            # –ü–æ–∫–∞–∑—É—î–º–æ —Ç–æ–ø-5 –∞–∫—Ç–∏–≤—ñ–≤
            balances = balance.get('balances', [])
            if balances:
                print("\nüìà –¢–æ–ø-5 –∞–∫—Ç–∏–≤—ñ–≤ –∑–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—é:")
                for i, asset in enumerate(balances[:5], 1):
                    print(f"  {i}. {asset['asset']}: {asset['total']:.6f} (${asset['usdt_value']:.2f})")
            
            return True
        else:
            print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –±–∞–ª–∞–Ω—Å")
            return False
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        return False

if __name__ == "__main__":
    test_balance()
